{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\pokeapp\\\\src\\\\components\\\\PokemonData.jsx\";\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Card, ProgressBar } from 'react-bootstrap';\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n} // const stats = [\n//   {\n//     name: 'HP',\n//     color: '#FF5959'\n//   },\n//   {\n//     name: 'Attack',\n//     color: '#F5AC78'\n//   },\n//   {\n//     name: 'Defense',\n//     color: '#FAE078'\n//   },\n//   {\n//     name: 'Special Attack',\n//     color: '#9DB7F5'\n//   },\n//   {\n//     name: 'Special Defense',\n//     color: '#A7DB8D'\n//   },\n//   {\n//     name: 'Speed',\n//     color: '#FA92B2'\n//   }\n// ]\n\n\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '606082',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n};\nexport default function PokemonData(props) {\n  const [types, setTypes] = useState([props.types]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, capitalizeFirstLetter(props.name)), /*#__PURE__*/React.createElement(\"img\", {\n    src: props.sprite,\n    alt: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Abilities\"), props.abilities.map((ability, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, capitalizeFirstLetter(ability.ability.name)))), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Types\"), types.map((type, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, capitalizeFirstLetter(type))))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Base Stats\"), props.stats.map((stat, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, stat.stat.name === 'hp' ? stat.stat.name.toUpperCase() : capitalizeFirstLetter(stat.stat.name)), /*#__PURE__*/React.createElement(ProgressBar, {\n    variant: \"none\",\n    now: stat.base_stat,\n    max: 255,\n    label: stat.base_stat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/pokeapp/src/components/PokemonData.jsx"],"names":["React","useState","Container","Row","Col","Card","ProgressBar","capitalizeFirstLetter","string","charAt","toUpperCase","slice","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","PokemonData","props","types","setTypes","name","sprite","abilities","map","ability","key","type","stats","stat","base_stat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Row, Col, Card, ProgressBar } from 'react-bootstrap';\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// const stats = [\n//   {\n//     name: 'HP',\n//     color: '#FF5959'\n//   },\n//   {\n//     name: 'Attack',\n//     color: '#F5AC78'\n//   },\n//   {\n//     name: 'Defense',\n//     color: '#FAE078'\n//   },\n//   {\n//     name: 'Special Attack',\n//     color: '#9DB7F5'\n//   },\n//   {\n//     name: 'Special Defense',\n//     color: '#A7DB8D'\n//   },\n//   {\n//     name: 'Speed',\n//     color: '#FA92B2'\n//   }\n// ]\n\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '606082',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n}\n\n\nexport default function PokemonData(props) {\n\n  const [types, setTypes] = useState([props.types]);\n\n  return (\n    <Container className=\"mt-2\">\n      <Row>\n        <Col xs={12} md={6}>\n          <Card>\n            <Card.Header>\n              <h5>{capitalizeFirstLetter(props.name)}</h5>\n              <img src={props.sprite} alt={props.name} />\n            </Card.Header>\n            <Card.Body>\n              <h5>Abilities</h5>\n              {props.abilities.map((ability, key) => (\n                <div key={key}>\n                  <span>{capitalizeFirstLetter(ability.ability.name)}</span>\n                </div>\n              ))}\n              <h5>Types</h5>\n              {types.map((type, key) => (\n                <div key={key}>\n                  <span>{capitalizeFirstLetter(type)}</span>\n                </div>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs={12} md={6}>\n          <Card>\n            <Card.Body>\n              <h4>Base Stats</h4>\n              {props.stats.map((stat, key) => (\n                <div key={key}>\n                  <strong>{stat.stat.name === 'hp' ? stat.stat.name.toUpperCase() : capitalizeFirstLetter(stat.stat.name)}</strong>\n                  <ProgressBar variant=\"none\" now={stat.base_stat} max={255} label={stat.base_stat} />\n                </div>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}