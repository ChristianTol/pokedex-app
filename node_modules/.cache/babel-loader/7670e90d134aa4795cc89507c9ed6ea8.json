{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\pokeapp\\\\src\\\\components\\\\PokemonData.jsx\";\nimport React from 'react';\nimport { Container, Row, Col, Card, ProgressBar } from 'react-bootstrap';\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst stats = [{\n  name: 'HP',\n  color: '#FF5959'\n}, {\n  name: 'Attack',\n  color: '#F5AC78'\n}, {\n  name: 'Defense',\n  color: '#FAE078'\n}, {\n  name: 'Special Attack',\n  color: '#9DB7F5'\n}, {\n  name: 'Special Defense',\n  color: '#A7DB8D'\n}, {\n  name: 'Speed',\n  color: '#FA92B2'\n}];\nexport default function PokemonData(props) {\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, capitalizeFirstLetter(props.name)), /*#__PURE__*/React.createElement(\"img\", {\n    src: props.sprite,\n    alt: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Abilities\"), props.abilities.map((ability, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, capitalizeFirstLetter(ability.ability.name)))), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Types\"), props.types.map((type, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, capitalizeFirstLetter(type.type.name))))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Base Stats\"), props.stats.map((stat, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, stat.stat.name === 'hp' ? stat.stat.name.toUpperCase() : capitalizeFirstLetter(stat.stat.name)), /*#__PURE__*/React.createElement(ProgressBar, {\n    variant: \"\",\n    now: stat.base_stat,\n    max: 255,\n    label: stat.base_stat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }))))))));\n}","map":{"version":3,"sources":["C:/Users/chris/Desktop/pokeapp/src/components/PokemonData.jsx"],"names":["React","Container","Row","Col","Card","ProgressBar","capitalizeFirstLetter","string","charAt","toUpperCase","slice","stats","name","color","PokemonData","props","sprite","abilities","map","ability","key","types","type","stat","base_stat"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Card, ProgressBar } from 'react-bootstrap';\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst stats = [\n  {\n    name: 'HP',\n    color: '#FF5959'\n  },\n  {\n    name: 'Attack',\n    color: '#F5AC78'\n  },\n  {\n    name: 'Defense',\n    color: '#FAE078'\n  },\n  {\n    name: 'Special Attack',\n    color: '#9DB7F5'\n  },\n  {\n    name: 'Special Defense',\n    color: '#A7DB8D'\n  },\n  {\n    name: 'Speed',\n    color: '#FA92B2'\n  }\n]\n\nexport default function PokemonData(props) {\n  return (\n    <Container className=\"mt-2\">\n      <Row>\n        <Col xs={12} md={6}>\n          <Card>\n            <Card.Header>\n              <h5>{capitalizeFirstLetter(props.name)}</h5>\n              <img src={props.sprite} alt={props.name} />\n            </Card.Header>\n            <Card.Body>\n              <h5>Abilities</h5>\n              {props.abilities.map((ability, key) => (\n                <div key={key}>\n                  <span>{capitalizeFirstLetter(ability.ability.name)}</span>\n                </div>\n              ))}\n              <h5>Types</h5>\n              {props.types.map((type, key) => (\n                <div key={key}>\n                  <span>{capitalizeFirstLetter(type.type.name)}</span>\n                </div>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs={12} md={6}>\n          <Card>\n            <Card.Body>\n              <h4>Base Stats</h4>\n              {props.stats.map((stat, key) => (\n                <div key={key}>\n                  <strong>{stat.stat.name === 'hp' ? stat.stat.name.toUpperCase() : capitalizeFirstLetter(stat.stat.name)}</strong>\n                  <ProgressBar variant=\"\" now={stat.base_stat} max={255} label={stat.base_stat} />\n                </div>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}